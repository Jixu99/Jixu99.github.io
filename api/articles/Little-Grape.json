{"title":"小葡萄点餐（瑞吉）","uid":"33b31a83413931658e5fbe1a200a4967","slug":"Little-Grape","date":"2023-02-05T08:39:28.566Z","updated":"2023-02-05T13:19:35.172Z","comments":true,"path":"api/articles/Little-Grape.json","keywords":null,"cover":"/img/Little-Grape/little-grape.jpg","content":"<h2 id=\"负责模块\"><a href=\"#负责模块\" class=\"headerlink\" title=\"负责模块\"></a>负责模块</h2><h3 id=\"管理端\"><a href=\"#管理端\" class=\"headerlink\" title=\"管理端\"></a>管理端</h3><h4 id=\"管理员登录\"><a href=\"#管理员登录\" class=\"headerlink\" title=\"管理员登录\"></a><strong>管理员登录</strong></h4><p>首先判断该用户是否存在，在判断密码是否正确，最后查看账号状态，若没被禁用即可登录。最后存到session中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">httpServletRequest.getSession().setAttribute(<span class=\"string\">&quot;employee&quot;</span>, one.getId());</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"分页\"><a href=\"#分页\" class=\"headerlink\" title=\"分页\"></a><strong>分页</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * ClassName：MyBatisPlusConfig</span></span><br><span class=\"line\"><span class=\"comment\"> * Package:IntelliJ IDEA</span></span><br><span class=\"line\"><span class=\"comment\"> * MP 分页插件配置</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>:Jixu</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Create</span>:2023/1/29-11:06</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span> <span class=\"comment\">// 配置类使用的注解</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyBatisPlusConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">// 交给spring容器管理</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">mybatisPlusInterceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">        mybatisPlusInterceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInnerInterceptor</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mybatisPlusInterceptor;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用MybatisPlus提供的Page对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Page</span>&lt;T&gt; imple,ents IPage&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> List&lt;T&gt; records;  <span class=\"comment\">// 用来存放查询出来的数据</span></span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"type\">long</span> total; <span class=\"comment\">// 返回记录的总数</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"type\">long</span> size; <span class=\"comment\">//  每页显示条数，默认 10</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"type\">long</span> current;  <span class=\"comment\">// 当前页,默认1</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> List&lt;OrderItem&gt; orders; <span class=\"comment\">//  排序字段信息</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"type\">boolean</span> optimizeCountSql; <span class=\"comment\">// 自动优化 COUNT SQL,默认true</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"type\">boolean</span> isSearchCount; <span class=\"comment\">//   是否进行 count 查询,默认true</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"type\">boolean</span> hitCount; <span class=\"comment\">// 是否命中count缓存,默认false</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>员工的crud操作均使用MyBatisPlus 实现</p>\n<h4 id=\"文件的上传与下载\"><a href=\"#文件的上传与下载\" class=\"headerlink\" title=\"文件的上传与下载\"></a><strong>文件的上传与下载</strong></h4><ul>\n<li>首先在配置文件里设置文件的存储位置</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">little-grape:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span></span><br><span class=\"line\">    <span class=\"string\">D:\\litte-grape\\pictures\\</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在Controller中定义文件存储路径，使用@Value读取配置文件并赋值</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Value(&quot;$&#123;little-grape.path&#125;&quot;)</span></span><br><span class=\"line\">String basePath;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件图片的上传</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> R&lt;String&gt; <span class=\"title function_\">upload</span><span class=\"params\">(MultipartFile file)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// file为临时文件 ，需要转存到本地磁盘中，否则请求完成后临时文件就会删除</span></span><br><span class=\"line\">    <span class=\"comment\">// 获取原始文件名</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">originalFilename</span> <span class=\"operator\">=</span> file.getOriginalFilename(); <span class=\"comment\">// abc.jpg</span></span><br><span class=\"line\">    <span class=\"comment\">// 截取后缀 .jpg</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">suffix</span> <span class=\"operator\">=</span> originalFilename.substring(originalFilename.lastIndexOf(<span class=\"string\">&quot;.&quot;</span>));</span><br><span class=\"line\">    <span class=\"comment\">// 使用uuid重新生成文件名，防止重复</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> UUID.randomUUID().toString() + suffix;</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个目录对象</span></span><br><span class=\"line\">    <span class=\"type\">File</span> <span class=\"variable\">dir</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(basePath);</span><br><span class=\"line\">    <span class=\"comment\">// 判断目录是否存在 创建目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!dir.exists()) &#123;</span><br><span class=\"line\">        dir.mkdirs();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 降临时文件转存到指定位置</span></span><br><span class=\"line\">        file.transferTo(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(basePath + fileName));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> R.success(fileName);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件图片的回显</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">download</span><span class=\"params\">(String name, HttpServletResponse response)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 输入流 ，通过输入流读取文件内容</span></span><br><span class=\"line\">        <span class=\"type\">FileInputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(basePath + name));</span><br><span class=\"line\">        <span class=\"comment\">// 输出流，将文件写回游览器，在游览器显示图片</span></span><br><span class=\"line\">        <span class=\"type\">ServletOutputStream</span> <span class=\"variable\">servletOutputStream</span> <span class=\"operator\">=</span> response.getOutputStream();</span><br><span class=\"line\">        <span class=\"comment\">// 设置文件格式</span></span><br><span class=\"line\">        response.setContentType(<span class=\"string\">&quot;image/jpeg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">length</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((length = inputStream.read(bytes)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            servletOutputStream.write(bytes, <span class=\"number\">0</span>, length);</span><br><span class=\"line\">            servletOutputStream.flush();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">        inputStream.close();</span><br><span class=\"line\">        servletOutputStream.close();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"套餐及菜品\"><a href=\"#套餐及菜品\" class=\"headerlink\" title=\"套餐及菜品\"></a><strong>套餐及菜品</strong></h4><p>修改前先清缓存</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redisTemplate.delete(key);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Stream流\"><a href=\"#Stream流\" class=\"headerlink\" title=\"Stream流\"></a><strong>Stream流</strong></h4><p> 暂时理解为遍历的一种操作  例 ：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;DishFlavor&gt; flavors = dishDto.getFlavors();</span><br><span class=\"line\">flavors = flavors.stream().map((item) -&gt; &#123;  <span class=\"comment\">// Stream流表达形式，item为每一项</span></span><br><span class=\"line\">    item.setDishId(dishId); <span class=\"comment\">// 赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> item; <span class=\"comment\">//返回修改后的子对象</span></span><br><span class=\"line\">&#125;).collect(Collectors.toList()); <span class=\"comment\">// 转为List集合</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"自定义业务异常\"><a href=\"#自定义业务异常\" class=\"headerlink\" title=\"自定义业务异常\"></a><strong>自定义业务异常</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">RuntimeException</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CustomException</span><span class=\"params\">(String message)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"全局异常处理器\"><a href=\"#全局异常处理器\" class=\"headerlink\" title=\"全局异常处理器\"></a><strong>全局异常处理器</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ControllerAdvice(annotations = &#123;RestController.class, Controller.class&#125;)</span> <span class=\"comment\">//所有的异常都能次进行一致处理。</span></span><br><span class=\"line\"><span class=\"meta\">@ResponseBody</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a><strong>过滤器</strong></h4><p>使用注解@webFilter , urlPatterns &#x3D; “&#x2F;* 表示拦截所有请求  继承与Filter</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebFilter(filterName = &quot;loginCheckFilter&quot;, urlPatterns = &quot;/*&quot;)</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"线程\"><a href=\"#线程\" class=\"headerlink\" title=\"线程\"></a><strong>线程</strong></h4><p>项目中使用到线程</p>\n<p>登录过滤器中如果登陆成功调用</p>\n<p>threadLocal.set(id) 和 threadLocal.get(id)  存储和获取Id</p>\n<h3 id=\"移动端\"><a href=\"#移动端\" class=\"headerlink\" title=\"移动端\"></a>移动端</h3><h4 id=\"登录为输入邮箱验证码\"><a href=\"#登录为输入邮箱验证码\" class=\"headerlink\" title=\"登录为输入邮箱验证码\"></a>登录为输入邮箱验证码</h4><ul>\n<li>首先导入依赖</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&lt;dependency&gt;</span></span><br><span class=\"line\">    <span class=\"string\">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span><br><span class=\"line\">    <span class=\"string\">&lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>调用提供的 Java 提供的 mailSender对象</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMsg</span><span class=\"params\">(String to, String subject, String context)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SimpleMailMessage</span> <span class=\"variable\">mailMessage</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleMailMessage</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    mailMessage.setFrom(from); <span class=\"comment\">// 邮件的发送人</span></span><br><span class=\"line\">    mailMessage.setTo(to); <span class=\"comment\">// 邮件的接受者邮箱</span></span><br><span class=\"line\">    mailMessage.setSubject(subject); <span class=\"comment\">// 邮件的标题</span></span><br><span class=\"line\">    mailMessage.setText(context); <span class=\"comment\">// 邮件的具体内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 真正的发送邮件操作，从 from到 to</span></span><br><span class=\"line\">    mailSender.send(mailMessage);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h4><ul>\n<li>在用户第一次进入先查询redis数据库有无菜品及套餐数据 <ul>\n<li>（redisTemplate.opsForValue().get(keys);）</li>\n</ul>\n</li>\n<li>未查到数据时，在向数据库查询，同时存到redis数据库中 <ul>\n<li>（redisTemplate.opsForValue().set(keys, Object, time, TimeUnit.MINUTES);）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"结算\"><a href=\"#结算\" class=\"headerlink\" title=\"结算\"></a>结算</h4><p>点击结算后 创建订单在批量向订单明细添加数据，清空购物车</p>\n","feature":true,"text":"基于SpringBoot + Vue + Mybatis-Plus + Redis + Mysql 等技术栈实现的外卖点餐系统。","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"项目","slug":"项目","count":2,"path":"api/tags/项目.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%9F%E8%B4%A3%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">负责模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%A1%E7%90%86%E7%AB%AF\"><span class=\"toc-text\">管理端</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%A1%E7%90%86%E5%91%98%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">管理员登录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E9%A1%B5\"><span class=\"toc-text\">分页</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0%E4%B8%8E%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">文件的上传与下载</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A5%97%E9%A4%90%E5%8F%8A%E8%8F%9C%E5%93%81\"><span class=\"toc-text\">套餐及菜品</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Stream%E6%B5%81\"><span class=\"toc-text\">Stream流</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%9A%E5%8A%A1%E5%BC%82%E5%B8%B8\"><span class=\"toc-text\">自定义业务异常</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%99%A8\"><span class=\"toc-text\">全局异常处理器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%87%E6%BB%A4%E5%99%A8\"><span class=\"toc-text\">过滤器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B\"><span class=\"toc-text\">线程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A7%BB%E5%8A%A8%E7%AB%AF\"><span class=\"toc-text\">移动端</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95%E4%B8%BA%E8%BE%93%E5%85%A5%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81\"><span class=\"toc-text\">登录为输入邮箱验证码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Redis\"><span class=\"toc-text\">Redis</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E7%AE%97\"><span class=\"toc-text\">结算</span></a></li></ol></li></ol></li></ol>","author":{"name":"寄许","slug":"blog-author","avatar":"/img/20210313122054101.png","link":"/","description":"风来听风,雨来看雨","socials":{"github":"https://jixu99.github.io/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/322601346"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/send-permission"}}}},"mapped":true,"prev_post":{"title":"个人想法","uid":"f2b7062f0cb0d9043e818423b0c37216","slug":"personal","date":"2023-02-05T13:29:13.684Z","updated":"2023-02-05T13:32:36.220Z","comments":true,"path":"api/articles/personal.json","keywords":null,"cover":"/img/person.jpg","text":"嘻嘻哈哈","link":"","photos":[],"count_time":{"symbolsCount":131,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"个人","slug":"个人","count":1,"path":"api/tags/个人.json"}],"author":{"name":"寄许","slug":"blog-author","avatar":"/img/20210313122054101.png","link":"/","description":"风来听风,雨来看雨","socials":{"github":"https://jixu99.github.io/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/322601346"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/send-permission"}}}},"feature":true},"next_post":{"title":"WeShopping项目","uid":"7a599eb929e20107b6e749c077b6a900","slug":"WeShopping","date":"2023-02-05T08:37:39.729Z","updated":"2023-02-05T13:20:57.331Z","comments":true,"path":"api/articles/WeShopping.json","keywords":null,"cover":"/img/weshopping.png","text":"MybatisPlus，SSM ，ElementUI， Vue ,Redis,Axios等","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"项目","slug":"项目","count":2,"path":"api/tags/项目.json"}],"author":{"name":"寄许","slug":"blog-author","avatar":"/img/20210313122054101.png","link":"/","description":"风来听风,雨来看雨","socials":{"github":"https://jixu99.github.io/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/322601346"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/send-permission"}}}}}}