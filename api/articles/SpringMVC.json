{"title":"SpringMVC","uid":"cd53cdbf97b8f99c953dd3eda45eed25","slug":"SpringMVC","date":"2023-02-06T14:05:09.728Z","updated":"2023-02-06T14:12:00.491Z","comments":true,"path":"api/articles/SpringMVC.json","keywords":null,"cover":"/img/SpringMVC.jpg","content":"<h1 id=\"SpringMVC\"><a href=\"#SpringMVC\" class=\"headerlink\" title=\"SpringMVC\"></a>SpringMVC</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a><strong>介绍</strong></h2><ul>\n<li>Spring内置的MVC框架。</li>\n<li>支持RESTful风格的URL请求</li>\n<li>采用了松散耦合可插拔组件结构</li>\n</ul>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a><strong>原理</strong></h2><p>MVC模式(Model-View-Controller)：解决页面代码和后台代码的分离。</p>\n<h2 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a><strong>工作流程</strong></h2><p>SpringMVC的核心组件是dispatcherServlet前端控制器</p>\n<p>这个前端控制器的内部流程为 – 截取url地址，获取到类名和方法名，之后通过Java中的反射机制动态调用<br>某个Controller中的方法，并将方法的返回结果以JSON的数据格式返回给前台。</p>\n<ul>\n<li>首先经过dispatcherServlet前端控制器，通过反射动态调用相应的Controller</li>\n<li>Controller使用@RestController注解，将返回的数据以JSON格式返回给前台</li>\n<li>使用 @RequestMapping（）。填写映射地址，也相当于总路由</li>\n</ul>\n<h2 id=\"常用注解\"><a href=\"#常用注解\" class=\"headerlink\" title=\"常用注解\"></a><strong>常用注解</strong></h2><ul>\n<li><p>@Controller : 表明这是一个Controller</p>\n</li>\n<li><p>@ResponseBody : 将返回对象写到response的body区，通常用来返回json或xml数据；如果不加responsebody，默认返回的是跳转路径</p>\n</li>\n<li><p>@RestController : 包含@Controller和@ResponseBody两个注解</p>\n</li>\n<li><p>@RequestMapping : controller指定可以处理哪些 URL 请求, 具体分为以下几种， 对应RESTful</p>\n<ul>\n<li>@PostMapping : Post Request</li>\n<li>@GetMapping : Get Request</li>\n<li>@DeleteMapping : Delete Request</li>\n<li>@PutMapping</li>\n</ul>\n</li>\n<li><p>@PathVariable :  将路径中的参数绑定到请求方法参数上</p>\n</li>\n<li><p>@RequestBody : 用于将http请求的Body映射绑定到此参数上。只能用于接收对象</p>\n</li>\n<li><p>@RequestPar : 支持的请求方法是MultipartFile，@RequestPart适用于复杂的请求域（像JSON，XML），既可以接收对象又可以接收二进制数据流</p>\n</li>\n<li><p>@RequestParam: 只能用来接收基本数据类型、String 或者MultipartFile类型 (绑定请求参数和handler方法形参)</p>\n</li>\n</ul>\n","feature":true,"text":"SpringMVC也是一个容器，使用IoC核心技术，管理界面层中的控制器对象。SpringMVC的底层就是servlet其核心DispatcherServlet","link":"","photos":[],"count_time":{"symbolsCount":970,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Spring笔记","slug":"Spring笔记","count":3,"path":"api/tags/Spring笔记.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SpringMVC\"><span class=\"toc-text\">SpringMVC</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">工作流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">常用注解</span></a></li></ol></li></ol>","author":{"name":"寄许","slug":"blog-author","avatar":"/img/20210313122054101.png","link":"/","description":"风来听风,雨来看雨","socials":{"github":"https://jixu99.github.io/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/322601346"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/send-permission"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"Spring框架核心知识点","uid":"795f915a16128efa588065568418f9f0","slug":"Spring","date":"2023-02-06T12:58:21.573Z","updated":"2023-02-06T14:09:24.701Z","comments":true,"path":"api/articles/Spring.json","keywords":null,"cover":"/img/spring.png","text":"Spring是一个分层的全栈轻量级开源框架，核心是IOC和AOP，还能整合众多的第三方开源框架和类库。","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Spring笔记","slug":"Spring笔记","count":3,"path":"api/tags/Spring笔记.json"}],"author":{"name":"寄许","slug":"blog-author","avatar":"/img/20210313122054101.png","link":"/","description":"风来听风,雨来看雨","socials":{"github":"https://jixu99.github.io/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/322601346"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/send-permission"}}}},"feature":true}}